{"ast":null,"code":"var _jsxFileName = \"/home/ivan/javascript_projects/connect_four/src/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Cell from './Cell';\nimport ColumnCursor from './ColumnCursor';\nimport { useGameContext } from './GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const {\n    boardState,\n    setBoardState,\n    activePlayerNum,\n    setActivePlayerNum\n  } = useGameContext();\n  const [moveCounter, setMoveCounter] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ColumnCursor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameboard\",\n      children: boardState.flat().map((cellState, index) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          cellState: cellState,\n          cellIndex: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GameBoard, \"KgCUnRz/bxKPy+jSpkjLP3r6q7M=\", false, function () {\n  return [useGameContext];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/home/ivan/javascript_projects/connect_four/src/GameBoard.js"],"names":["React","useState","Cell","ColumnCursor","useGameContext","GameBoard","boardState","setBoardState","activePlayerNum","setActivePlayerNum","moveCounter","setMoveCounter","flat","map","cellState","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AACFC,IAAAA,UADE;AAEFC,IAAAA,aAFE;AAGFC,IAAAA,eAHE;AAIFC,IAAAA;AAJE,MAKFL,cAAc,EALlB;AAOA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AAEA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEQK,UAAU,CAACM,IAAX,GAAkBC,GAAlB,CAAsB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACxC,4BACI,QAAC,IAAD;AAEI,UAAA,SAAS,EAAED,SAFf;AAGI,UAAA,SAAS,EAAEC;AAHf,WACSA,KADT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAkBH,CA5BD;;GAAMV,S;UAMED,c;;;KANFC,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport Cell from './Cell';\nimport ColumnCursor from './ColumnCursor';\nimport { useGameContext } from './GameContext';\n\nconst GameBoard = () => {\n    const {\n        boardState, \n        setBoardState,\n        activePlayerNum,\n        setActivePlayerNum,\n    } = useGameContext();\n\n    const [moveCounter, setMoveCounter] = useState(0);\n    \n    return (\n        <>\n            <ColumnCursor/>\n            <div className='gameboard'>\n                {\n                    boardState.flat().map((cellState, index) => {\n                        return (\n                            <Cell \n                                key={index} \n                                cellState={cellState} \n                                cellIndex={index}\n                            />\n                        );\n                    })\n                }\n            </div>\n        </>\n    );\n};\n\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}