{"ast":null,"code":"var _jsxFileName = \"/home/ivan/javascript_projects/connect_four/src/Modal/GameOverModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGameContext } from '../GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameOverModal = () => {\n  _s();\n\n  const {\n    winningPlayerNum,\n    isGameOver,\n    resetGame\n  } = useGameContext();\n\n  if (isGameOver) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Well played !\", winningPlayerNum === 0 ? \" It's a draw!\" : ` Player ${winningPlayerNum} has won the game!`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_s(GameOverModal, \"JGVz3wQOeba7R7PFuixShGzcTWk=\", false, function () {\n  return [useGameContext];\n});\n\n_c = GameOverModal;\nexport default GameOverModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOverModal\");","map":{"version":3,"sources":["/home/ivan/javascript_projects/connect_four/src/Modal/GameOverModal.js"],"names":["React","useGameContext","GameOverModal","winningPlayerNum","isGameOver","resetGame"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AACFC,IAAAA,gBADE;AAEFC,IAAAA,UAFE;AAGFC,IAAAA;AAHE,MAIFJ,cAAc,EAJlB;;AAKA,MAAIG,UAAJ,EAAgB;AACZ,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAA,sCAGQD,gBAAgB,KAAK,CAArB,GAAyB,eAAzB,GACC,WAAUA,gBAAiB,oBAJpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AACI,UAAA,SAAS,EAAC,KADd;AAEI,UAAA,OAAO,EAAEE,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBJ,wBAAO,qCAAP;AACH;AAEI,CA7BL;;GAAMH,a;UAKED,c;;;KALFC,a;AA+BN,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport { useGameContext } from '../GameContext';\n\nconst GameOverModal = () => {\n    const {\n        winningPlayerNum,\n        isGameOver,\n        resetGame,\n    } = useGameContext();\n    if (isGameOver) {\n        return (\n            <div className='modal-container'>\n                <div className='modal-content'>\n                    <h2>\n                        Well played ! \n                        {\n                            winningPlayerNum === 0 ? \" It's a draw!\":\n                            ` Player ${winningPlayerNum} has won the game!`\n                        }\n                    </h2>\n                    <button \n                        className='btn' \n                        onClick={resetGame}\n                    >\n                        Play Again\n                    </button>\n                </div>\n            </div>\n    );\n    return <></>\n}\n\n    }\n\nexport default GameOverModal;"]},"metadata":{},"sourceType":"module"}